export(Annotation)
export(AnnotationAffx)
export(AnnotationDavid)
export(AnnotationDavidCsv)
export(AnnotationEnsembl)
export(AnnotationEnsemblCsv)
export(AnnotationEnvision)
export(AnnotationNetAffx)
export(ServiceManager)
export(addServices)
export(createSubmission)
export(getArrayType)
export(getArrayTypes)
export(getCredentials)
export(getDataFrame)
export(getDataFrameList)
# export(getDefaultServices)
export(getFolderName)
export(getIdMap)
export(getIdMapList)
#export(getProbesetList)
#export(getRoot)
export(getServiceRoot)
export(getServices)
#export(init)
#export(setCredentials)
export(setOptions)
export(setServices)
export(addServices.ServiceManager)
# export(createSubmission.AnnotationNetAffx)
#export(getArrayType.Annotation)
#export(getArrayTypes.Annotation)
#export(getCredentials.Annotation)
export(getDataFrame.Annotation)
export(getDataFrameList.ServiceManager)
importFrom(biomaRt, getBM, useDataset, useMart)
importFrom(ENVISIONQuery, ENVISIONQuery)
importFrom(AffyCompatible, readAnnotation, NetAffxResource)
importFrom(DAVIDQuery, convertIDList)
importFrom(rChoiceDialogs, rselect.list, rchoose.files, rchoose.dir)
importFrom(R.methodsS3, throw)
importFrom(R.oo, extend, Object)
importFrom(utils, assignInNamespace, flush.console, packageDescription, read.csv, read.delim, write.table)

#export(getDefaultServices.ServiceManager)
export(getFolderName.Annotation)
export(getIdMap.Annotation)
export(getIdMapList.ServiceManager)
#export(getProbesetList.AnnotationAffx)
#export(getRoot.Annotation)
export(getServiceRoot.Annotation)
export(getServices.ServiceManager)
#export(init.Annotation)
#export(setCredentials.Annotation)
#export(setCredentials.AnnotationAffx)
export(setOptions.Annotation)
export(setServices.ServiceManager)
